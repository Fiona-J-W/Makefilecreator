'\" t
.\"     Title: mfc
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.77.0 <http://docbook.sf.net/>
.\"      Date: 06/23/2012
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "MFC" "1" "06/23/2012" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mfc \- a tool for simple creation of makefiles
.SH "SYNOPSIS"
.sp
\fBmfc\fR [\fIPARAMETERS\fR]
.SH "DESCRIPTION"
.sp
\fBmfc\fR is a small tool for the simple creation of simple makefiles\&. The mainadvantage compared to other tools is, that you don\(cqt have to mention, which files are existing, for your code files are found and identified by their endings automaticly\&.
.sp
mfc is designed to use intelligent defaults\&. However, not everything you might want to do, is intelligent for everyone and different people might want to use different compilers\&. Therefore it is of course possible to set severall things via commandline and config\-files\&. These will be parsed in the following order:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
/etc/mfc/mfc\&.conf
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
~/\&.config/mfc/mfc\&.conf
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
\&./mfc\&.conf
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
commandline
.RE
.sp
Later options will override older ones, if they are obviously conflicting (e\&.g\&. setting a different compiler will overide the former setting but setting a new compiler option will keep the old ones too)\&.
.sp
If not noted otherwise all ways are sharing most of the commands, except for the short options: You can only use them as commandlineparameters, not in the config\-files\&.
.SS "OPTIONS"
.PP
\fB\-s, \-\-source\-dir\fR
.RS 4
Sets the root\-directory, that contains all your codefiles (those may be in subdirectories though)\&. The defualt is the current directory\&.
.RE
.PP
\fB\-b, \-\-build\-dir\fR
.RS 4
Set the build\-directory, where all object\-files are stored\&. The defualt is the current directory\&.
.RE
.PP
\fB\-t, \-\-target\fR
.RS 4
Set the target\-file\&. This has to be done anywhere, because there is no default\&.
.RE
.PP
\fB\-o, \-\-output\fR
.RS 4
Set the output of mfc\&. The default is \(lqmakefile\(rq\&. This must not be outside the current directory\&.
.RE
.PP
\fB\-v, \-\-verbose\fR
.RS 4
Set the level of verbosity\&. The default is 0, which means nearly no output
.RE
.PP
\fB\-d, \-\-debug\fR
.RS 4
Set the debug level\&.
.RE
.PP
\fB\-e, \-\-header\-ending\fR
.RS 4
add a fileending that indicates a headerfile
.RE
.PP
\fB\-E, \-\-impl\-ending\fR
.RS 4
add a fileending that indicates a codefile
.RE
.PP
\fB\-c, \-\-compiler\fR
.RS 4
set the compiler\&.
.RE
.PP
\fB\-l, \-\-link\fR
.RS 4
Set what the target libraries should be linked against\&.
.RE
.PP
\fB\-L, \-\-link\-dir\fR
.RS 4
Add a directory to the programms list, where it should look for libraries\&.
.RE
.PP
\fB\-I, \-\-include\-dir\fR
.RS 4
Add a directory to the compilers include\-list\&.
.RE
.PP
\fB\-w, \-\-ignore\fR
.RS 4
Ignore the given file completely
.RE
.PP
\fB\-H, \-\-header\fR
.RS 4
Treat the given file as headerfile\&. This is for example usefull, if you wrote a class, that uses templates and therefore include the implementation parts in the header\&.
.RE
.PP
\fBimport\fR
.RS 4
This option only works in config\-files\&. It imports another config\-file\&.
.RE
.PP
\fB\-f, \-\-config\-file\fR
.RS 4
interpret the given files as config\-file\&. This option doesn\(cqt work in config\-files\&.
.RE
.PP
\fB\-u, \-\-use\fR
.RS 4
Use the given config\-set\&.
.RE
.PP
\fB\-O, \-\-compiler\-opts\fR
.RS 4
add a compile\-option\&.
.RE
.SH "BUGS"
.sp
Please report bugs at https://github\&.com/Florianjw/Makefilecreator
.SH "AUTHOR"
.sp
\fIFlorian Weber\fR <florian\&.weber@sfz\-bw\&.de>
.SH "COPYING"
.sp
This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version\&.
.sp
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the GNU Affero General Public License for more details\&.
.sp
You should have received a copy of the GNU Affero General Public License along with this program\&. If not, see http://www\&.gnu\&.org/licenses/\&.
